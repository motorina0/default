<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="svc_type">java</value>
  <value name="svc_subtype">unknown</value>
  <value name="svc_sigtype">java 3.5</value>
  <record name="svc_sig" javaclass="com.wm.util.Values">
    <record name="sig_in" javaclass="com.wm.util.Values">
      <value name="node_type">record</value>
      <value name="is_public">false</value>
      <value name="field_name">getLevenshteinDistanceInput</value>
      <value name="field_type">record</value>
      <value name="field_dim">0</value>
      <value name="nillable">true</value>
      <value name="form_qualified">false</value>
      <value name="is_global">false</value>
      <array name="rec_fields" type="record" depth="1">
        <record javaclass="com.wm.util.Values">
          <value name="node_type">unknown</value>
          <value name="is_public">false</value>
          <value name="field_name">s</value>
          <value name="field_type">string</value>
          <value name="field_dim">0</value>
          <value name="nillable">true</value>
          <value name="form_qualified">false</value>
          <value name="is_global">false</value>
        </record>
        <record javaclass="com.wm.util.Values">
          <value name="node_type">unknown</value>
          <value name="is_public">false</value>
          <value name="field_name">t</value>
          <value name="field_type">string</value>
          <value name="field_dim">0</value>
          <value name="nillable">true</value>
          <value name="form_qualified">false</value>
          <value name="is_global">false</value>
        </record>
      </array>
      <value name="modifiable">true</value>
    </record>
    <record name="sig_out" javaclass="com.wm.util.Values">
      <value name="node_type">record</value>
      <value name="is_public">false</value>
      <value name="field_name">getLevenshteinDistanceOutput</value>
      <value name="field_type">record</value>
      <value name="field_dim">0</value>
      <value name="nillable">true</value>
      <value name="form_qualified">false</value>
      <value name="is_global">false</value>
      <array name="rec_fields" type="record" depth="1">
        <record javaclass="com.wm.util.Values">
          <value name="node_type">unknown</value>
          <value name="is_public">false</value>
          <value name="field_name">value</value>
          <value name="field_type">object</value>
          <value name="field_dim">0</value>
          <value name="nillable">true</value>
          <value name="form_qualified">false</value>
          <value name="is_global">false</value>
        </record>
      </array>
      <value name="modifiable">true</value>
    </record>
  </record>
  <value name="node_comment">    Find the Levenshtein distance between two Strings.

    This is the number of changes needed to change one String into another, where each change is a single character modification (deletion, insertion or substitution).

    The previous implementation of the Levenshtein distance algorithm was from http://www.merriampark.com/ld.htm

    Chas Emerick has written an implementation in Java, which avoids an OutOfMemoryError which can occur when my Java implementation is used with very large strings.
    This implementation of the Levenshtein distance algorithm is from http://www.merriampark.com/ldjava.htm

     StringUtils.getLevenshteinDistance(null, *)             = IllegalArgumentException
     StringUtils.getLevenshteinDistance(*, null)             = IllegalArgumentException
     StringUtils.getLevenshteinDistance("","")               = 0
     StringUtils.getLevenshteinDistance("","a")              = 1
     StringUtils.getLevenshteinDistance("aaapppp", "")       = 7
     StringUtils.getLevenshteinDistance("frog", "fog")       = 1
     StringUtils.getLevenshteinDistance("fly", "ant")        = 3
     StringUtils.getLevenshteinDistance("elephant", "hippo") = 7
     StringUtils.getLevenshteinDistance("hippo", "elephant") = 7
     StringUtils.getLevenshteinDistance("hippo", "zzzzzzzz") = 8
     StringUtils.getLevenshteinDistance("hello", "hallo")    = 1
     

    Parameters:
        s - the first String, must not be null
        t - the second String, must not be null 
    Returns:
        result distance </value>
  <value name="stateless">no</value>
  <value name="caching">no</value>
  <value name="prefetch">no</value>
  <value name="cache_ttl">15</value>
  <value name="prefetch_level">1</value>
  <value name="template_type">html</value>
  <value name="audit_level">off</value>
  <value name="check_internal_acls">no</value>
  <value name="icontext_policy">$null</value>
  <value name="system_service">no</value>
  <value name="retry_max">0</value>
  <value name="retry_interval">0</value>
  <value name="svc_in_validator_options">none</value>
  <value name="svc_out_validator_options">none</value>
  <value name="auditoption">0</value>
  <null name="auditfields_input"/>
  <null name="auditfields_output"/>
  <record name="auditsettings" javaclass="com.wm.util.Values">
    <value name="document_data">0</value>
    <value name="startExecution">false</value>
    <value name="stopExecution">false</value>
    <value name="onError">true</value>
  </record>
  <value name="pipeline_option">1</value>
  <null name="originURI"/>
  <value name="modifiable">true</value>
  <value name="is_public">false</value>
</Values>
